# lovelace_gen
type: vertical-stack
cards:
  - type: horizontal-stack
    cards:
      - type: horizontal-stack
        cards:
          - type: picture-entity
            entity: sensor.mattias_status
            image: /local/mattias_cropped.png
            show_name: false
          - type: picture-entity
            entity: sensor.malin_status
            image: /local/malin_cropped.png
            show_name: false


  - type: horizontal-stack
    cards:
      - type: "custom:button-card"
        entity: shell_command.lovelace_gen
        icon: mdi:refresh
        show_name: false
        color: grey
        aspect_ratio: 2/1
        size: 35%
        tap_action:
          action: call-service
          service: script.turn_on
          service_data:
            entity_id: script.lovelace_generator

      - type: custom:button-card
        entity: alarm_control_panel.grave_alarm
        show_state: false
        show_icon: true
        show_name: false
        aspect_ratio: 2/1
        size: 35%
        state:
          - value: 'armed_away'
            icon: mdi:security
            color: green
          - value: 'armed_home'
            icon: mdi:security
            color: yellow
          - value: 'disarmed'
            icon: mdi:security
            color: red
        tap_action:
          action: more-info
        styles:
          grid:
            - position: relative
          custom_fields:
            last_changed:
              - position: absolute
              - left: 65%
              - top: 77%
              - font-size: 8px
              - color: grey
        custom_fields:
          last_changed: '[[[ return `${states["sensor.alarm_last_changed"].state}` ]]]'


### Ytterdörr lås
      - type: custom:button-card
        entity: binary_sensor.ytterdorr_las
        show_state: false
        show_icon: true
        show_name: false
        aspect_ratio: 2/1
        state:
          - value: 'on'
            icon: mdi:lock-open
            color: red
          - value: 'off'
            icon: mdi:lock
            color: green
          - value: 'unavailable'
            icon: mdi:alert
            color: red
        tap_action:
          action: more-info
        styles:
          grid:
            - position: relative
          custom_fields:
            last_changed:
              - position: absolute
              - left: 65%
              - top: 77%
              - font-size: 8px
              - color: grey
        custom_fields:
          last_changed: '[[[ return `${states["sensor.ytterdorr_lock_last_changed"].state}` ]]]'

### Garagedörr lås
      - type: custom:button-card
        entity: binary_sensor.garage_dorr_las
        show_state: false
        show_icon: true
        show_name: false
        aspect_ratio: 2/1
        size: 35%
        state:
          - value: 'on'
            icon: mdi:lock-open
            color: red
          - value: 'off'
            icon: mdi:lock
            color: green
          - value: 'unavailable'
            icon: mdi:alert
            color: red
        tap_action:
          action: more-info
        styles:
          grid:
            - position: relative
          custom_fields:
            last_changed:
              - position: absolute
              - left: 65%
              - top: 77%
              - font-size: 8px
              - color: grey
        custom_fields:
          last_changed: '[[[ return `${states["sensor.garagedorr_lock_last_changed"].state}` ]]]'




### Kia Optima PHEV
      - type: custom:button-card
        entity: input_select.optima_phev
        show_state: false
        show_icon: true
        show_name: false
        aspect_ratio: 2/1
        size: 35%
        state:
          - value: 'Av'
            icon: mdi:car-side
            color: grey
          - value: 'Laddar'
            icon: mdi:car-side
            color: yellow
        tap_action:
          action: more-info
        styles:
          grid:
            - position: relative
          custom_fields:
            watt:
              - position: absolute
              - left: -15%
              - top: 77%
              - font-size: 8px
              - color: rgb(66,66,66)
              - --text-color-sensor: '[[[ if (states["sensor.laddstation_pow_watt"].state > 50) return "yellow"; ]]]'
            last_changed:
              - position: absolute
              - left: 65%
              - top: 77%
              - font-size: 8px
              - color: grey
        custom_fields:
          watt: >
            [[[
              return `<ha-icon
                style="width: 12px; height: 12px; ">
                </ha-icon><span><span style="color: var(--text-color-sensor);">${states['sensor.laddstation_pow_watt'].state}W</span></span>`
            ]]]
          last_changed: '[[[ return `${states["sensor.laddstation_last_changed"].state}` ]]]'



### Motorvärmare
      - type: custom:button-card
        entity: input_boolean.motorvarmare
        show_state: false
        show_icon: true
        show_name: false
        aspect_ratio: 2/1
        size: 35%
        state:
          - value: 'off'
            icon: mdi:radiator
            color: grey
          - value: 'on'
            icon: mdi:radiator
            color: yellow
        tap_action:
          action: more-info
        styles:
          grid:
            - position: relative
          custom_fields:
            watt:
              - position: absolute
              - left: -15%
              - top: 77%
              - font-size: 8px
              - color: rgb(66,66,66)
              - --text-color-sensor: '[[[ if (states["sensor.motorvarmare_pow_watt"].state > 50) return "yellow"; ]]]'
            last_changed:
              - position: absolute
              - left: 65%
              - top: 77%
              - font-size: 8px
              - color: grey
        custom_fields:
          watt: >
            [[[
              return `<ha-icon
                style="width: 12px; height: 12px; ">
                </ha-icon><span><span style="color: var(--text-color-sensor);">${states['sensor.motorvarmare_pow_watt'].state}W</span></span>`
            ]]]
          last_changed: >
            [[[
              var d = new Date(entity.last_changed);
              return `${d.getHours()}:${d.getMinutes()}`
            ]]]



  - type: horizontal-stack
    cards:

### Diskmaskin
      - type: conditional
        conditions:
          - entity: sensor.status_group_check
            state: "True"
        card:
          type: custom:button-card
          entity: input_select.diskmaskin_status
          show_state: false
          show_icon: true
          show_name: false
          aspect_ratio: 2/1
          size: 35%
          state:
            - value: 'Av'
              icon: mdi:dishwasher
              color: grey
            - value: 'Diskar'
              icon: mdi:dishwasher
              color: yellow
            - value: 'Ren'
              icon: mdi:dishwasher
              color: green
          tap_action:
            action: more-info
          hold_action:
            action: call-service
            service: input_select.select_option
            service_data:
              entity_id: input_select.diskmaskin_status
              option: 'Av'
          styles:
            grid:
              - position: relative
            custom_fields:
              watt:
                - position: absolute
                - left: -15%
                - top: 77%
                - font-size: 8px
                - color: rgb(66,66,66)
                - --text-color-sensor: '[[[ if (states["sensor.diskmaskin_pow_watt"].state > 20) return "yellow"; ]]]'
              last_changed:
                - position: absolute
                - left: 65%
                - top: 77%
                - font-size: 8px
                - color: grey
          custom_fields:
            watt: >
              [[[
                return `<ha-icon
                  style="width: 12px; height: 12px; ">
                  </ha-icon><span><span style="color: var(--text-color-sensor);">${states['sensor.diskmaskin_pow_watt'].state}W</span></span>`
              ]]]
            last_changed: >
              [[[
                var d = new Date(entity.last_changed);
                return `${d.getHours()}:${d.getMinutes()}`
              ]]]
### Tvättmaskin
      - type: conditional
        conditions:
          - entity: sensor.status_group_check
            state: "True"
        card:
          type: custom:button-card
          entity: input_select.tvattmaskin_status
          show_state: false
          show_icon: true
          show_name: false
          aspect_ratio: 2/1
          size: 35%
          state:
            - value: 'Av'
              icon: mdi:washing-machine
              color: grey
            - value: 'Tvättar'
              icon: mdi:washing-machine
              color: yellow
            - value: 'Ren'
              icon: mdi:washing-machine
              color: green
          tap_action:
            action: more-info
          hold_action:
            action: call-service
            service: input_select.select_option
            service_data:
              entity_id: input_select.tvattmaskin_status
              option: 'Av'
          styles:
            grid:
              - position: relative
            custom_fields:
              watt:
                - position: absolute
                - left: -15%
                - top: 77%
                - font-size: 8px
                - color: rgb(66,66,66)
                - --text-color-sensor: '[[[ if (states["sensor.tvattmaskin_pow_watt"].state > 20) return "yellow"; ]]]'
              last_changed:
                - position: absolute
                - left: 65%
                - top: 77%
                - font-size: 8px
                - color: grey
          custom_fields:
            watt: >
              [[[
                return `<ha-icon
                  style="width: 12px; height: 12px; ">
                  </ha-icon><span><span style="color: var(--text-color-sensor);">${states['sensor.tvattmaskin_pow_watt'].state}W</span></span>`
              ]]]
            last_changed: >
              [[[
                var d = new Date(entity.last_changed);
                return `${d.getHours()}:${d.getMinutes()}`
              ]]]


### Torktumlare
      - type: conditional
        conditions:
          - entity: sensor.status_group_check
            state: "True"
        card:
          type: custom:button-card
          entity: input_select.torktumlare_status
          show_state: false
          show_icon: true
          show_name: false
          aspect_ratio: 2/1
          size: 35%
          state:
            - value: 'Av'
              icon: mdi:tumble-dryer
              color: grey
            - value: 'Tvättar'
              icon: mdi:tumble-dryer
              color: yellow
            - value: 'Ren'
              icon: mdi:tumble-dryer
              color: green
          tap_action:
            action: more-info
          hold_action:
            action: call-service
            service: input_select.select_option
            service_data:
              entity_id: input_select.torktumlare_status
              option: 'Av'
          styles:
            grid:
              - position: relative
            custom_fields:
              watt:
                - position: absolute
                - left: -15%
                - top: 77%
                - font-size: 8px
                - color: rgb(66,66,66)
                - --text-color-sensor: '[[[ if (states["sensor.torktumlare_pow_watt"].state > 20) return "yellow"; ]]]'
              last_changed:
                - position: absolute
                - left: 65%
                - top: 77%
                - font-size: 8px
                - color: grey
          custom_fields:
            watt: >
              [[[
                return `<ha-icon
                  style="width: 12px; height: 12px; ">
                  </ha-icon><span><span style="color: var(--text-color-sensor);">${states['sensor.torktumlare_pow_watt'].state}W</span></span>`
              ]]]
            last_changed: >
              [[[
                var d = new Date(entity.last_changed);
                return `${d.getHours()}:${d.getMinutes()}`
              ]]]


### Gräsklippare
      - type: conditional
        conditions:
          - entity: sensor.status_group_check
            state: "True"
        card:
          type: custom:button-card
          entity: input_text.landroid
          show_state: false
          show_icon: true
          show_name: false
          aspect_ratio: 2/1
          size: 35%
          state:
            - value: 'Laddar'
              icon: mdi:robot
              color: grey
            - value: 'Klipper'
              icon: mdi:robot
              color: yellow
            - value: 'Fastnat'
              icon: mdi:robot
              color: red
          tap_action:
            action: more-info
          styles:
            grid:
              - position: relative
            custom_fields:
              last_changed:
                - position: absolute
                - left: 65%
                - top: 77%
                - font-size: 8px
                - color: grey
          custom_fields:
            last_changed: >
              [[[
                var d = new Date(entity.last_changed);
                return `${d.getHours()}:${d.getMinutes()}`
              ]]]

### AirCondition
      - type: conditional
        conditions:
          - entity: sensor.status_group_check
            state: "True"
        card:
          type: custom:button-card
          entity: input_select.aircondition_status
          show_state: false
          show_icon: true
          show_name: false
          aspect_ratio: 2/1
          size: 35%
          state:
            - value: 'Av'
              icon: mdi:air-conditioner
              color: grey
            - value: 'Sovrummet För Varmt'
              icon: mdi:air-conditioner
              color: red
            - value: 'På'
              icon: mdi:air-conditioner
              color: yellow
          tap_action:
            action: more-info
          styles:
            grid:
              - position: relative
            custom_fields:
              watt:
                - position: absolute
                - left: -15%
                - top: 77%
                - font-size: 8px
                - color: rgb(66,66,66)
                - --text-color-sensor: '[[[ if (states["sensor.aircondition_pow_watt"].state > 20) return "yellow"; ]]]'
              last_changed:
                - position: absolute
                - left: 65%
                - top: 77%
                - font-size: 8px
                - color: grey
          custom_fields:
            watt: >
              [[[
                return `<ha-icon
                  style="width: 12px; height: 12px; ">
                  </ha-icon><span><span style="color: var(--text-color-sensor);">${states['sensor.aircondition_pow_watt'].state}W</span></span>`
              ]]]
            last_changed: >
              [[[
                var d = new Date(entity.last_changed);
                return `${d.getHours()}:${d.getMinutes()}`
              ]]]

### Dammsugare
      - type: conditional
        conditions:
          - entity: sensor.status_group_check
            state: "True"
        card:
          type: custom:button-card
          entity: vacuum.xiaomi_vacuum_cleaner
          show_state: false
          show_icon: true
          show_name: false
          aspect_ratio: 2/1
          size: 35%
          icon: mdi:robot-vacuum
          color: grey
          state:
            - value: 'docked'
              icon: mdi:robot-vacuum
              color: grey
            - value: 'cleaning'
              icon: mdi:robot-vacuum
              color: yellow
            - value: 'returning'
              icon: mdi:robot-vacuum
              color: yellow
            - value: 'paused'
              icon: mdi:robot-vacuum
              color: red
            - value: 'error'
              icon: mdi:robot-vacuum
              color: red
            - value: 'unavailable'
              icon: mdi:robot-vacuum
              color: red
          tap_action:
            action: more-info
          styles:
            grid:
              - position: relative
            custom_fields:
              last_changed:
                - position: absolute
                - left: 65%
                - top: 77%
                - font-size: 8px
                - color: grey
          custom_fields:
            last_changed: >
              [[[
                var d = new Date(entity.last_changed);
                return `${d.getHours()}:${d.getMinutes()}`
              ]]]

##Temperatursensorer
  - type: horizontal-stack
    cards:
      - type: "custom:mini-graph-card"
        entities:
         - sensor.inomhus_temperatur
        name: Inomhus
        height: 100
        line_width: 6
        font_size: 80
        line_color: '#e74c3c'
        lower_bound: '17'
        show:
          icon: false
      - type: "custom:mini-graph-card"
        entities:
         - sensor.yr_temperature
        name: Utomhus
        height: 100
        line_width: 6
        font_size: 80
        line_color: '#3498db'
        show:
          icon: false
      - type: "custom:mini-graph-card"
        entities:
         - sensor.grave_pow_watt
        name: Ström
        height: 100
        line_width: 6
        font_size: 80
        line_color: '#42f46e'
        lower_bound: '500'
        show:
          icon: false


  - type: horizontal-stack
    cards:
      - type: "custom:button-card"
        entity: light.alla_lampor
        show_icon: false
        name: 'Av'
        tap_action:
          action: call-service
          service: light.turn_off
          service_data:
            entity_id: light.alla_lampor

      - type: "custom:button-card"
        entity: light.alla_lampor
        show_icon: false
        name: 'På'
        tap_action:
          action: call-service
          service: light.turn_on
          service_data:
            entity_id: light.alla_lampor

      - type: "custom:button-card"
        entity: light.alla_lampor
        show_icon: false
        name: 'Mys'
        tap_action:
          action: call-service
          service: input_boolean.turn_on
          service_data:
            entity_id: input_boolean.mysbelysning

##Rumsgrupper rad 1
  - type: horizontal-stack
    cards:
      - type: custom:decluttering-card
        template: room_button_template
        variables:
          - name: Sovrum
          - button_entity: input_text.sovrum
          - temperature: sensor.sovrum_temperatur
          - light_entity: light.sovrum
          - motion_sensor: binary_sensor.sovrum_rorelsesensor
          - window_left: input_text.fake_entity_for_templates
          - window_right: input_text.fake_entity_for_templates
          - door: binary_sensor.balkong_dorr
          - cover: cover.sovrum
          - fire: input_text.fake_entity_for_templates
          - water: input_text.fake_entity_for_templates
          - warning: input_text.sovrum
          - dishwasher: input_text.fake_washer

      - type: custom:decluttering-card
        template: room_button_template
        variables:
          - name: Hemmabio
          - button_entity: input_text.hemmabio
          - temperature: sensor.hemmabio_temperatur
          - light_entity: light.hemmabio_lights
          - motion_sensor: binary_sensor.hemmabio_rorelsesensor
          - window_left: input_text.fake_entity_for_templates
          - window_right: input_text.fake_entity_for_templates
          - door: binary_sensor.uterum_dorr
          - cover: cover.hemmabio
          - fire: binary_sensor.hemmabio_brandlarm
          - water: input_text.fake_entity_for_templates
          - warning: input_text.hemmabio
          - dishwasher: input_text.fake_washer


      - type: custom:decluttering-card
        template: room_button_template
        variables:
          - name: kontor
          - button_entity: input_text.kontor
          - temperature: sensor.kontor_temperatur_3
          - light_entity: light.kontor
          - light_entity2: light.kontor
          - motion_sensor: binary_sensor.kontor_rorelsesensor
          - window_left: binary_sensor.kontor_fonster_vanster
          - window_right: binary_sensor.kontor_fonster_hoger
          - door: input_text.fake_entity_for_templates
          - cover: cover.kontor
          - fire: binary_sensor.3dprinter_brandlarm
          - water: input_text.fake_entity_for_templates
          - warning: input_text.kontor
          - dishwasher: input_text.fake_washer


##Rumsgrupper rad 1
  - type: horizontal-stack
    cards:

      - type: custom:decluttering-card
        template: room_button_template
        variables:
          - name: Gästrum
          - button_entity: input_text.gastrum_vanster
          - temperature: sensor.gastrum_vanster_temperatur
          - light_entity: light.gastrum_vanster
          - motion_sensor: binary_sensor.gastrum_vanster_rorelsesensor
          - window_left: input_text.fake_entity_for_templates
          - window_right: input_text.fake_entity_for_templates
          - door: input_text.fake_entity_for_templates
          - cover: input_text.fake_cover_for_templates
          - fire: input_text.fake_entity_for_templates
          - water: input_text.fake_entity_for_templates
          - warning: input_text.gastrum_vanster
          - dishwasher: input_text.fake_washer



      - type: custom:decluttering-card
        template: room_button_template
        variables:
          - name: Gästrum
          - button_entity: input_text.gastrum_hoger
          - temperature: sensor.gastrum_hoger_temperatur
          - light_entity: light.gastrum_hoger
          - motion_sensor: binary_sensor.gastrum_hoger_rorelsesensor
          - window_left: input_text.fake_entity_for_templates
          - window_right: input_text.fake_entity_for_templates
          - door: input_text.fake_entity_for_templates
          - cover: input_text.fake_cover_for_templates
          - fire: input_text.fake_entity_for_templates
          - water: input_text.fake_entity_for_templates
          - warning: input_text.gastrum_hoger
          - dishwasher: input_text.fake_washer



      - type: custom:decluttering-card
        template: room_button_template
        variables:
          - name: hall
          - button_entity: input_text.hall
          - temperature: sensor.hall_temperatur
          - light_entity: light.hall
          - motion_sensor: binary_sensor.hall_rorelsesensor
          - window_left: binary_sensor.hall_fonster
          - window_right: input_text.fake_entity_for_templates
          - door: binary_sensor.hus_ytterdorr
          - cover: input_text.fake_cover_for_templates
          - fire: input_text.fake_entity_for_templates
          - water: input_text.fake_entity_for_templates
          - warning: input_text.hall
          - dishwasher: input_text.fake_washer


  - type: horizontal-stack
    cards:

      - type: custom:decluttering-card
        template: room_button_template
        variables:
          - name: kök
          - button_entity: input_text.kok
          - temperature: sensor.kok_temperatur
          - light_entity: light.kok
          - motion_sensor: binary_sensor.kok_rorelsesensor
          - window_left: binary_sensor.kok_fonster_vanster
          - window_right: binary_sensor.kok_fonster_hoger
          - door: binary_sensor.kok_dorr
          - cover: input_text.fake_cover_for_templates
          - fire: input_text.fake_entity_for_templates
          - water: binary_sensor.kok_diskbank
          - warning: input_text.kok
          - dishwasher: input_text.fake_washer

          

      - type: custom:decluttering-card
        template: room_button_template
        variables:
          - name: tvrum
          - button_entity: input_text.tvrum
          - temperature: sensor.tvrum_temperatur
          - light_entity: light.tvrum
          - motion_sensor: binary_sensor.tvrum_rorelsesensor
          - window_left: input_text.fake_entity_for_templates
          - window_right: input_text.fake_entity_for_templates
          - door: input_text.fake_entity_for_templates
          - cover: input_text.fake_cover_for_templates
          - fire: input_text.fake_entity_for_templates
          - water: input_text.fake_entity_for_templates
          - warning: input_text.tvrum
          - dishwasher: input_text.fake_washer

      - type: custom:decluttering-card
        template: room_button_template
        variables:
          - name: uterum
          - button_entity: input_text.uterum
          - temperature: sensor.uterum_temperatur
          - light_entity: light.utomhus
          - motion_sensor: binary_sensor.uterum_rorelsesensor
          - window_left: input_text.fake_entity_for_templates
          - window_right: input_text.fake_entity_for_templates
          - door: binary_sensor.uterum_dorr
          - cover: input_text.fake_cover_for_templates
          - fire: input_text.fake_entity_for_templates
          - water: input_text.fake_entity_for_templates
          - warning: input_text.uterum
          - dishwasher: input_text.fake_washer

  - type: horizontal-stack
    cards:

      - type: custom:decluttering-card
        template: room_button_template
        variables:
          - name: Tvättstuga
          - button_entity: input_text.tvattstuga
          - temperature: sensor.tvattstuga_temperatur
          - light_entity: light.tvattstuga_taklampa
          - motion_sensor: binary_sensor.tvattstuga_rorelsesensor
          - window_left: input_text.fake_entity_for_templates
          - window_right: input_text.fake_entity_for_templates
          - door: binary_sensor.tvattstuga_dorr
          - cover: input_text.fake_cover_for_templates
          - fire: input_text.fake_entity_for_templates
          - water: binary_sensor.tvattstuga_vattensensor
          - warning: input_text.tvattstuga
          - dishwasher: input_select.diskmaskin_status

      - type: custom:decluttering-card
        template: room_button_template
        variables:
          - name: Garage
          - button_entity: input_text.garage
          - temperature: sensor.garage_temperatur
          - light_entity: light.garage
          - motion_sensor: binary_sensor.garage_dorr_rorelsesensor
          - window_left: input_text.fake_entity_for_templates
          - window_right: input_text.fake_entity_for_templates
          - door: binary_sensor.garage_dorr
          - cover: input_text.fake_cover_for_templates
          - fire: input_text.fake_entity_for_templates
#          - fire: binary_sensor.smoke_sensor_158d0001db7b52
          - water: binary_sensor.garage_vattensystem
          - warning: input_text.garage
          - dishwasher: input_text.fake_washer

      - type: custom:decluttering-card
        template: room_button_template
        variables:
          - name: Övrigt
          - button_entity: input_text.ovrigt
          - temperature: sensor.garage_temperatur
          - light_entity: light.garage
          - motion_sensor: binary_sensor.garage_dorr_rorelsesensor
          - window_left: input_text.fake_entity_for_templates
          - window_right: input_text.fake_entity_for_templates
          - door: binary_sensor.garage_dorr
          - cover: input_text.fake_cover_for_templates
          - fire: input_text.fake_entity_for_templates
          - water: binary_sensor.garage_vattensystem
          - warning: input_text.garage
          - dishwasher: input_text.fake_washer